/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++17 -t "#const std::string &=String~$.c_str()" -t "#const std::filesystem::path &=String~$.generic_string().c_str()"
 */

#include <CppUMockGen.hpp>

#include "OutputFileParser.hpp"

#include <CppUTestExt/MockSupport.h>

namespace expect { namespace OutputFileParser$ {
MockExpectedCall& OutputFileParser$ctor();
MockExpectedCall& OutputFileParser$ctor(unsigned int __numCalls__);
} }

namespace expect { namespace OutputFileParser$ {
MockExpectedCall& Parse(CppUMockGen::Parameter<const OutputFileParser*> __object__, CppUMockGen::Parameter<const char*> filepath);
MockExpectedCall& Parse(unsigned int __numCalls__, CppUMockGen::Parameter<const OutputFileParser*> __object__, CppUMockGen::Parameter<const char*> filepath);
} }

namespace expect { namespace OutputFileParser$ {
MockExpectedCall& GetUserCode(CppUMockGen::Parameter<const OutputFileParser*> __object__, const std::string * __return__);
MockExpectedCall& GetUserCode(unsigned int __numCalls__, CppUMockGen::Parameter<const OutputFileParser*> __object__, const std::string * __return__);
} }

namespace expect { namespace OutputFileParser$ {
MockExpectedCall& GetGenerationOptions(CppUMockGen::Parameter<const OutputFileParser*> __object__, const std::string * __return__);
MockExpectedCall& GetGenerationOptions(unsigned int __numCalls__, CppUMockGen::Parameter<const OutputFileParser*> __object__, const std::string * __return__);
} }

